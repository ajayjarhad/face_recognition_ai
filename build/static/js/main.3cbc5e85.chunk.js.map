{"version":3,"sources":["components/Logo/brain.png","components/Profile/ProfileIcon.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","components/Modal/Modal.js","components/Profile/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProfileIcon","props","console","log","useState","dropdownOpen","setDropdownOpen","className","Dropdown","isOpen","toggle","prevState","DropdownToggle","tag","data-toggle","aria-expanded","style","marginRight","src","alt","DropdownMenu","marginTop","backgroundColor","DropdownItem","onClick","toggleModal","onRouteChange","Navigation","isSignedIn","display","justifyContent","Logo","options","max","height","width","paddingTop","brain","Rank","generateEmoji","entries","fetch","then","response","json","data","setState","emoji","input","catch","state","this","prevProps","name","React","Component","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","imageUrl","boxes","id","map","box","key","topRow","top","bottom","bottomRow","right","rightCol","left","leftCol","Signin","onSignInEmail","event","signInEmail","target","value","onSignInPassword","signInPassword","saveAuthTokenInSessions","token","window","sessionStorage","setItem","onSubmit","method","headers","body","JSON","stringify","email","password","success","loadUser","user","enterKey","htmlFor","onKeyPress","Register","onNameEntry","onEmailEntry","onPasswordEntry","onRegisterButton","modalRoot","document","getElementById","Modal","el","createElement","appendChild","removeChild","ReactDOM","createPortal","children","Profile","onProfileUpdate","getItem","formInput","resp","status","onFormChange","age","pet","color","Date","joined","toLocaleDateString","placeholder","ParticlesOption","initialState","route","isProfileOpen","App","count","Object","assign","err","displayTheBoxes","calculateFaceLocations","outputs","regions","face","clarifaiFace","region_info","bounding_box","image","left_col","right_col","top_row","bottom_row","params","Boolean","location","hostname","match","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3cbc5e85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.6cee16e8.png\";","import React,{ useState } from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\n\r\n\r\nconst ProfileIcon = (props) => {\r\n\r\n    console.log(props)\r\n        const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n        const toggle = () => setDropdownOpen(prevState => !prevState);\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     // this.state = {\r\n    //     //     dropdownOpen:false\r\n    //     // }\r\n\r\n    // }\r\n\r\n\r\n       \r\n       \r\n        return (\r\n<div className=\"pa4 tc\">\r\n<Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n<DropdownToggle\r\n        tag=\"span\"\r\n        data-toggle=\"dropdown\"\r\n        aria-expanded={dropdownOpen}\r\n        style={{marginRight: '2.5rem'}}\r\n                    >\r\n                \r\n  <img\r\n      src=\"http://tachyons.io/img/logo.jpg\"\r\n      className=\"br-100 h3 w3 dib\" alt=\"avatar\" />\r\n                \r\n      </DropdownToggle>\r\n                    <DropdownMenu className=\"b--transparent shadow-5\" style={{ marginTop: '20px', backgroundColor: 'rgba(255,255,255,0.5)', marginRight: '2rem' }}>\r\n                        <DropdownItem onClick={props.toggleModal}>View Profile</DropdownItem>\r\n        <DropdownItem onClick={()=>props.onRouteChange('signin') }>Sign out</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n\r\n\r\n\r\n                </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\nexport default ProfileIcon;","import React from 'react'\r\nimport ProfileIcon from '../Profile/ProfileIcon'\r\nconst Navigation = ({onRouteChange,isSignedIn,toggleModal}) => {\r\n    return( isSignedIn ?\r\n        <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <ProfileIcon onRouteChange={onRouteChange} toggleModal={toggleModal} />\r\n        </nav>\r\n        :\r\n        <nav style={{display:'flex',justifyContent:'flex-end'}}>\r\n        <p className='fa3 link dim white underline pa3 pointer' onClick={()=>onRouteChange('signin')}>Sign In</p>\r\n        <p className='fa3 link dim white underline pa3 pointer' onClick={()=>onRouteChange('register')}>Register</p>\r\n        </nav>\r\n)\r\n\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport brain from './brain.png'\r\nimport Tilt from 'react-tilt'\r\n\r\nimport './Logo.css'\r\n\r\nconst Logo = () => {\r\nreturn(\r\n    <div className='ma4 mt0'>\r\n        <Tilt className=\"Til br shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n <div className=\"Tilt-inner pa3\"> <img style={{ paddingTop: '5px', width: '100px', height:'120px'}} alt='logo' src={brain} /> </div>\r\n</Tilt>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Logo","import React from 'react'\r\n\r\nclass Rank extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            emoji: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.generateEmoji(this.props.entries)\r\n    }\r\n    componentDidUpdate(prevProps,prevState){\r\n        if(prevProps.entries === this.props.entries && prevProps.name === this.props.name ){\r\n            return null\r\n        }\r\n        this.generateEmoji(this.props.entries)\r\n    }\r\n    generateEmoji = (entries) =>{\r\n        fetch(`https://1u2gmswme2.execute-api.ap-south-1.amazonaws.com/dev/rank?rank=${entries}`)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({emoji: data.input}))\r\n        .catch(console.log)\r\n    }\r\n    render(){\r\n    return(\r\n        <div>\r\n            <div className='white f3'>\r\n                {`${this.props.name}, You have made ${this.props.entries} entries so far`}\r\n                <div className='white f3'>\r\n                    {`Rank badge: ${this.state.emoji}`}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Rank","import React from 'react'\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({onInputChange,onButtonSubmit}) =>{\r\n    return(\r\n        <div>\r\n            <p className='f3' style={{'color':'white'}}>\r\n                {'This app will detect faces in a photograph. Give it a try'}\r\n            </p>\r\n            <div className='form center pa4 br3 shadow-5'>\r\n                <input type='text' className='f4 pa2 w-70 center' onChange={onInputChange}/>\r\n                <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n                onClick={onButtonSubmit}\r\n                >Detect</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm","import React from 'react'\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({imageUrl,boxes}) =>{\r\n    return(\r\n        <div className='center ma'>\r\n            <div className='mt2 absolute'>\r\n                <img id='inputImage' alt='' src={imageUrl} width='500px' height='auto' />\r\n                {\r\n                    boxes.map(box => {\r\n                        return <div key={box.topRow} className='bounding-box' style = {{top: box.topRow,bottom: box.bottomRow,right: box.rightCol,left: box.leftCol}}> </div>\r\n\r\n                    })\r\n                }\r\n                        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition","import React from 'react'\r\n\r\nclass Signin extends React.Component {\r\nconstructor(props) {\r\n    super(props)\r\n    this.state={\r\n        signInEmail: '',\r\n        signInPassword: ''\r\n    }\r\n    }\r\n\r\nonSignInEmail=(event)=>{\r\n    this.setState({signInEmail: event.target.value})\r\n}\r\nonSignInPassword=(event)=>{\r\n    this.setState({signInPassword: event.target.value})\r\n}\r\nsaveAuthTokenInSessions = (token) => {\r\n    window.sessionStorage.setItem('token', token);\r\n  }\r\n\r\n  onSubmit = () => {\r\n    fetch('https://backend.ajayjarhad.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data && data.success === \"true\") {\r\n          this.saveAuthTokenInSessions(data.token)\r\n          this.props.loadUser(data.user)\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n      .catch(console.log)\r\n  }\r\n\r\n    enterKey = (event) => {\r\n        if (event.key === 'Enter') { \r\n            this.onSubmit();   \r\n    }\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <article className=\"br3 ba dark-gray b--white-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80 white\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0 \" >Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\" >Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" onChange={this.onSignInEmail}/>\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\" >Password</label>\r\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" onChange={this.onSignInPassword}\r\n                                 onKeyPress={this.enterKey}/>\r\n                        </div>\r\n                        </ fieldset>\r\n                        <div className=\"\">\r\n                            <input className=\"b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib white\" type=\"submit\" value=\"Sign in\"\r\n                                onClick={this.onSubmit}\r\n                               />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                        <p  onClick={() => this.props.onRouteChange('register')} className=\"b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib white\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        )\r\n    }\r\n    }\r\n \r\n\r\nexport default Signin","import React from 'react'\r\n\r\nclass Register extends React.Component{\r\n    constructor(props) {\r\n        super (props)\r\n        this.state={\r\n            name:'',\r\n            email:'',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    onNameEntry = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n    onEmailEntry = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n    onPasswordEntry=(event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n    onRegisterButton = () => {\r\n        // fetch('https://nameless-shore-94252.herokuapp.com/register',{\r\n            fetch('https://backend.ajayjarhad.com/register',{\r\n            method:'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email:this.state.email,\r\n                password:this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if(user.id){\r\n                this.props.loadUser(user)\r\n                this.props.onRouteChange('home')\r\n        }})\r\n    }\r\n    render(){\r\n    return(\r\n <article className=\"br3 ba dark-gray b--white-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80 white\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0 \">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                        <input \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"name\" \r\n                        name=\"name\"  \r\n                        id=\"name\" \r\n                        onChange={this.onNameEntry}/>\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"email\" \r\n                        name=\"email-address\"  \r\n                        id=\"email-address\" \r\n                        onChange={this.onEmailEntry}/>\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"password\" \r\n                        name=\"password\"  \r\n                        id=\"password\" \r\n                        onChange={this.onPasswordEntry}/>\r\n                    </div>\r\n                    </ fieldset>\r\n                    <div className=\"\">\r\n                    <input className=\"b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib white\" type=\"submit\" value=\"Register\" \r\n                    onClick={this.onRegisterButton}\r\n                    />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './Modal.css'\r\n\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.el = document.createElement('div')\r\n    }\r\n    \r\n    componentDidMount() {\r\n        modalRoot.appendChild(this.el)\r\n    }\r\n    componentWillUnmount() {\r\n        modalRoot.removeChild(this.el)\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(this.props.children, this.el)\r\n    }\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport './Profile.css'\r\nclass Profile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: this.props.user.name,\r\n            age: this.props.user.age,\r\n            pet : this.props.user.pet\r\n        }\r\n    }\r\n\r\n\r\n    onProfileUpdate = (data) => {\r\n        fetch(`https://backend.ajayjarhad.com/profile/${this.props.user.id}`, {\r\n          method: 'post',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': window.sessionStorage.getItem('token')\r\n          },\r\n          body: JSON.stringify({\r\n            formInput: data\r\n          })\r\n        }).then(resp => {\r\n          if (resp.status === 200 || resp.status === 304) {\r\n            this.props.toggleModal();\r\n            this.props.loadUser({ ...this.props.user, ...data });\r\n          }\r\n        }).catch(console.log)\r\n      }\r\n    \r\n      onFormChange = (event) => {\r\n        switch(event.target.name) {\r\n          case 'user-name':\r\n            this.setState({name: event.target.value})\r\n            break;\r\n          case 'user-age':\r\n            this.setState({age: event.target.value})\r\n            break;\r\n          case 'user-pet':\r\n            this.setState({pet: event.target.value})\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }\r\n    \r\n\r\n    render()\r\n    {\r\n        const { toggleModal, user } = this.props\r\n        const { name,age,pet } = this.state\r\n        return (\r\n            <div className=\"profile-modal\">\r\n                <article className=\"br3 ba dark-gray b--white-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center bg-white\">\r\n                    <main className=\"pa4 black-80 white\">\r\n                        <img\r\n                            src=\"http://tachyons.io/img/logo.jpg\"\r\n                            className=\"br-100 h3 w3 dib\" alt=\"avatar\" />\r\n                        <div style={{ color: 'black' }}>\r\n                            <h1> {name} </h1>\r\n                            <h4>{`Image submitted :${user.entries}`}</h4>\r\n                            <p>{`Memeber since : ${new Date(user.joined).toLocaleDateString()}`}</p>\r\n                \r\n                            <label className=\"mt2 fw6\" htmlFor=\"user-name\" >Name : </label>\r\n                            <input\r\n                                onChange={this.onFormChange}\r\n                                className=\"pa2 ba w-100\"\r\n                                placeholder={user.name}\r\n                                type=\"text\"\r\n                                name=\"user-name\"\r\n                                id=\"name\"\r\n                            />\r\n                            <label className=\"mt2 fw6\" htmlFor=\"user-age\" >Age : </label>\r\n                            <input\r\n                            onChange={this.onFormChange}\r\n                                className=\"pa2 ba w-100\"\r\n                                placeholder={user.age}\r\n                                type=\"text\"\r\n                                name=\"user-age\"\r\n                                id=\"age\"\r\n                            />\r\n                            <label className=\"mt2 fw6\" htmlFor=\"user-pet\" >Pet : </label>\r\n                            <input\r\n                            onChange={this.onFormChange}\r\n                                className=\"pa2 ba w-100\"\r\n                                placeholder={user.pet}\r\n                                type=\"text\"\r\n                                name=\"user-pet\"\r\n                                id=\"pet\"\r\n                            />\r\n                            <div className='mt4' style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                                <button\r\n                                     onClick={() => this.onProfileUpdate({name, age, pet})}\r\n                                    className='b pa2 grow pointer hover-white w-40 bg-light-green b--black-20'>Save</button>\r\n                                <button className='b pa2 grow pointer hover-white w-40 bg-light-red b--black-20'\r\n                                    onClick={toggleModal}\r\n                                >Cancel</button>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                    <div className='modal-close' onClick={toggleModal}>&times;</div>\r\n                </article>\r\n            </div>\r\n                    \r\n        )\r\n    }\r\n} \r\n\r\nexport default Profile","import React,{Component} from 'react';\r\n\r\n\r\nimport Navigation from './components/Navigation/Navigation'\r\nimport Logo from './components/Logo/Logo'\r\nimport Rank from './components/Rank/Rank'\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\r\nimport Signin from './components/Signin/Signin'\r\nimport Register from './components/Register/Register'\r\nimport Modal from './components/Modal/Modal'\r\nimport Profile from './components/Profile/Profile'\r\nimport './App.css';\r\nimport Particles from 'react-particles-js';\r\nconst ParticlesOption = {\"particles\":{\"number\":{\"value\":30,\"density\":{\"enable\":true,\"value_area\":800}}}}\r\n\r\nconst initialState = {\r\n  input : '',\r\n  imageUrl: '',\r\n  boxes:[],\r\n  route: 'signin',\r\n  isProfileOpen : false,\r\n  isSignedIn:false,\r\n  user:{\r\n    id : '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: '',\r\n    pet: '',\r\n    age: ''\r\n  }\r\n}\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n      this.state = initialState\r\n  }\r\n\r\n  \r\n  componentDidMount() {\r\n    const token = window.sessionStorage.getItem('token');\r\n    if (token) {\r\n      fetch('https://backend.ajayjarhad.com/signin', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': token\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if (data && data.id) {\r\n            fetch(`https://backend.ajayjarhad.com/profile/${data.id}`, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n              }\r\n            })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n              if (user && user.email) {\r\n                this.loadUser(user)\r\n                this.onRouteChange('home');\r\n              }\r\n            })\r\n          }\r\n        })\r\n        .catch(console.log)\r\n    }\r\n  }\r\n\r\n\r\n  onInputChange = (event) =>{\r\n    this.setState({input:event.target.value})\r\n  }\r\n  \r\n  onButtonSubmit = () =>{\r\n    this.setState({imageUrl: this.state.input})\r\n   // fetch('https://nameless-shore-94252.herokuapp.com/imageurl',{\r\n    fetch('https://backend.ajayjarhad.com/imageurl',{\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': window.sessionStorage.getItem('token')\r\n      },\r\n    body: JSON.stringify({input:this.state.input})\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      if (response) {\r\n        // fetch('https://nameless-shore-94252.herokuapp.com/image', {\r\n          fetch('https://backend.ajayjarhad.com/image', {\r\n          method: 'put',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': window.sessionStorage.getItem('token')\r\n            },\r\n          \r\n          body: JSON.stringify({\r\n            id: this.state.user.id\r\n          })\r\n        })\r\n          .then(response => response.json())\r\n          .then(count => {\r\n            this.setState(Object.assign(this.state.user, { entries: count}))\r\n          })\r\n          .catch(err => console.log(err))\r\n\r\n      }\r\n      this.displayTheBoxes(this.calculateFaceLocations(response))\r\n    })\r\n     .catch(err=> console.log(err))\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      return this.setState({ initialState })\r\n    }\r\n    else if (route === 'home') this.setState({isSignedIn:true})\r\n    this.setState({route:route})\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      isProfileOpen: !prevState.isProfileOpen\r\n    }))\r\n  }\r\n\r\n  calculateFaceLocations = (data) => {\r\n    if (data && data.outputs) {\r\n      \r\n    \r\n      return data.outputs[0].data.regions.map(face => {\r\n        const clarifaiFace = face.region_info.bounding_box\r\n        const image = document.getElementById('inputImage')\r\n        const width = image.width;\r\n        const height = image.height;\r\n        return {\r\n          leftCol: clarifaiFace.left_col * width,\r\n          rightCol: width - (clarifaiFace.right_col * width),\r\n          topRow: clarifaiFace.top_row * height,\r\n          bottomRow: height - (clarifaiFace.bottom_row * height)\r\n        }\r\n      })\r\n    }\r\n    return\r\n\r\n  }\r\n\r\n  displayTheBoxes = (boxes) => {\r\n    if(boxes){ this.setState({boxes:boxes})}\r\n   \r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({user: {\r\n      id: data.id,\r\n      name: data.name,\r\n      email: data.email,\r\n      entries: data.entries,\r\n      joined: data.joined\r\n    }})\r\n  }\r\n  render()\r\n  {\r\n   const { isSignedIn,imageUrl,boxes,route, isProfileOpen,user } = this.state\r\n    return (\r\n    <div className=\"App\">\r\n       <Particles className='particles' \r\n      params={ParticlesOption}\r\n       />\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}\r\n          toggleModal={this.toggleModal}\r\n        />\r\n      {isProfileOpen ?             <Modal>\r\n          <Profile isProfileOpen={isProfileOpen} toggleModal={this.toggleModal}\r\n            loadUser={this.loadUser}\r\n            user={user} />\r\n              </Modal> : null}\r\n        \r\n        {route === 'home' ?\r\n            <div>\r\n            <Logo />\r\n            <Rank \r\n            name={this.state.user.name}\r\n            entries={this.state.user.entries}\r\n            />\r\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\r\n            <FaceRecognition imageUrl={imageUrl} boxes={boxes}/>\r\n            </div>\r\n\r\n      :(route ==='signin' ?\r\n      <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n      :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \r\n      )\r\n    }\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport 'tachyons'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}